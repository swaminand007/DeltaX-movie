@model MoviesDownload.Models.Movies

@{
    ViewBag.Title = "GetForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>GetForm</h2>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script>
    $(document).ready(
        function () {
            if (localStorage.getItem("is_reloaded")) {
                if (document.cookie != "is_reloaded=true") {
                    $("#ProducerId").hide();
                }
            }
            $("#button1").click(function () {
                $("#ProducerId").show();
                document.cookie = "is_reloaded=true";
            });

        });

    

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movies</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Yearofrelease, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Yearofrelease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Yearofrelease, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Poster, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Poster, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producer, "Producer", htmlAttributes: new { @class = "control-label col-md-2" })

            <button id="button1" name="add producer" value="add producer">Click Me</button>
            <div id="ProducerId" class="col-md-10" style="display:none" hidden>
                @Html.LabelFor(model => model.Producer, "Bio", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Producer.Bio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Producer, "DOB", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Producer.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Producer, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Producer.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Producer, "Sex", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Producer.Sex, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.ProducerId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Actors, "Actor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.EditorFor(model => model.Actors.SingleOrDefault().Bio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.EditorFor(model => model.Actors.SingleOrDefault().Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.EditorFor(model => model.Actors.SingleOrDefault().Sex, new { htmlAttributes = new { @class = "form-control" } })
                @Html.EditorFor(model => model.Actors.SingleOrDefault().DOB, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
