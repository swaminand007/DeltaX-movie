@model MoviesDownload.Models.Movies

@{
    ViewBag.Title = "Create";
    var now = DateTime.Now.Year;

}
@*<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>*@

@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@

@*<script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/bootstrap-multiselect.js"></script>*@

<script>
    function AddPro() {

        $(document).ready(function () {
            $("#id1").hide();
        })

        //$(document).ready(function () {
        //    $("#id1").click(function () {
        //        // $("#old").toggle('show');
        //        $("#old").hide();
        //    });
        //});
        // alert("addpro");


        $.ajax({
            url: "/Producers/PCreate",
            type: "GET",
            datatype: "html",

            success: function (data) {



                $("#pro").html(data);
            },
            error: function (result) {
                alert("Failed Producer");
            }

        });

    }
    //function AddProOld() {


    //    $.ajax({
    //        url: "/Producers/old",
    //        //type: "GET",
    //        datatype: "html",

    //        success: function (data) {



    //            $("#pro").html(data);
    //        },
    //        error: function (result) {
    //            alert("Failed Producer");
    //        }

    //    });

    //}

    function AddAct() {
        $(document).ready(function () {
            $("#id6").hide();
        })
        $.ajax({
            url: "/Actors/ACreate",
            type: "GET",
            datatype: "html",

            success: function (data) {



                $("#act").html(data);
            },
            error: function (result) {
                alert("Failed Actor");
            }

        });

    }

    //function AddActOld() {
    //    $.ajax({
    //        url: "/Actors/old",
    //        // type: "GET",
    //        datatype: "html",

    //        success: function (data) {



    //            $("#act").html(data);
    //        },
    //        error: function (result) {
    //            alert("Failed Actor");
    //        }

    //    });

    //}

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#imgInp").change(function () {
        readURL(this);
    });




</script>

<h2>Create</h2>
<style>
    body {
        background-color: silver;
        background-image: radial-gradient(circle at 100% 150%, silver 24%, white 25%, white 28%, silver 29%, silver 36%, white 36%, white 40%, transparent 40%, transparent), radial-gradient(circle at 0 150%, silver 24%, white 25%, white 28%, silver 29%, silver 36%, white 36%, white 40%, transparent 40%, transparent), radial-gradient(circle at 50% 100%, white 10%, silver 11%, silver 23%, white 24%, white 30%, silver 31%, silver 43%, white 44%, white 50%, silver 51%, silver 63%, white 64%, white 71%, transparent 71%, transparent), radial-gradient(circle at 100% 50%, white 5%, silver 6%, silver 15%, white 16%, white 20%, silver 21%, silver 30%, white 31%, white 35%, silver 36%, silver 45%, white 46%, white 49%, transparent 50%, transparent), radial-gradient(circle at 0 50%, white 5%, silver 6%, silver 15%, white 16%, white 20%, silver 21%, silver 30%, white 31%, white 35%, silver 36%, silver 45%, white 46%, white 49%, transparent 50%, transparent);
        background-size: 100px 50px;
    }

    #foo:focus {
        outline: none;
        border-color: aqua;
        box-shadow: 0 0 30px #9ecaed;
    }

    .fileContainer {
        overflow: hidden;
        position: relative;
    }




    #blah {
        height: 100px;
        width: 100px;
        /*position:absolute;
       left:14px;
        bottom:0.5px;*/
    }


    .fileContainer [type=file] {
        cursor: inherit;
        background-color: white;
        display: block;
        font-size: 999px;
        filter: alpha(opacity=0);
        min-height: 100%;
        min-width: 100%;
        opacity: 0;
        position: absolute;
        right: 0;
        text-align: right;
        top: 0;
    }
</style>

@using (Html.BeginForm("Create", "Films", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Film</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "foo" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "foo" } })*@
                <label class="fileContainer">
                    Upload a poster
                    <input type="file" name="post" class="file" id="imgInp" onchange="readURL(this);" />
                </label>
                <img id="blah" src="#" alt="NO IMAGE" />
                @Html.ValidationMessageFor(model => model.Poster, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Plot, new { htmlAttributes = new { @class = "form-control", id = "foo" } })*@
                <textarea class="form-control" , id="foo" name="Plot"></textarea>
                @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Yearofrelease, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Year_Of_Release, new { htmlAttributes = new { @class = "form-control" } })*@




                <div>

                    <select name="Year_Of_Release" value="Year_Of_Release" style="border-radius: 3px;
   background: white;
   width: 275px;
   padding: 5px;
   font-size: 16px;
   line-height: 5;
   border: 50px;
   height: 34px;" ,id="foo">
                        @for (var i = 1800; i <= now; i++)
                        {
                            <option id=@i value=@i>@i</option>
                        }
                    </select>

                </div>


                @Html.ValidationMessageFor(model => model.Yearofrelease, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<p style="position: absolute; left: -120px; top: 50px; font-weight:bold;">Producer Name</p>*@

        @*<p style="position: absolute; left: -75px; top: 135px;font-weight:bold;">Actor(s)</p>*@



        <div class="form-group">
            @Html.Label("Producer's Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<input type="button" id="id3" value="Add a Producer" class="btn btn-default" onclick="AddProOld()" />*@
                <div id="pro">
                </div>
                <input type="button" id="id1" value="Add a Producer" class="btn btn-default" onclick="AddPro()" />


            </div>
        </div>
        @*
                        style="position: absolute; left: 250px; bottom: 190px;"
            style="position: absolute; left: 440px; bottom: 190px;"
                    style="position: absolute; left: 600px; top:150px;"


                    @Html.LabelFor(model => model.ProducerID, "ProducerID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ProducerID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProducerID, "", new { @class = "text-danger" })
                            <br />


                        </div>*@

        <div class="form-group">
            @Html.Label("Actor Name(s)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<input type="button" id="id4" value="Add Actors" class="btn btn-default" onclick="AddActOld()" />*@
                <input type="button" id="id6" value="Add an Actor" class="btn btn-default" onclick="AddAct()" />
                <div id="act"></div>
            </div>

        </div>
        @*
             style="position: absolute; left: 250px; bottom: 100px;"
             style="position: absolute; left: 440px; bottom: 100px;"

            @Html.LabelFor(model => model.Actors, "Actors", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.ListBox("Actors", null, new { style = "width:150px;height:35px ,postion:sbsolute,left:100px" })

                <br />


            </div>*@





        @*<div class="form-group">
                     <div id="act" style="position: absolute; left: 600px; top:150px;">

                         @Html.ListBox("Actors",null, new { style = "width:150px;height:35px ,postion:sbsolute,left:200px" })

                         <select multiple name="ActorID" value="ActorID"
                                 style="border-radius: 5px;
            background: white;
            width: 275px;
            padding: 5px;
            font-size: 16px;
            border: 20px;
            height: 34px;">
                             @foreach (var item in ViewBag.Actors)
                             {
                                 <option id=@item.ActorID value="@item.ActorID" selected="i">@item.Name</option>
                             }
                         </select>*@








        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Movie" class="btn btn-default" align="center" />
            </div>
        </div>


    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>








@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}